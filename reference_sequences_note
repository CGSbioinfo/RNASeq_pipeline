
Reference sequences are found in: /mnt/cgs-fs3/Sequencing/Genome/
The folder structure that is followed:

Species/type/ensembl/version/release

Example:
/mnt/cgs-fs3/Sequencing/Genome/Human/dna/ensembl/grch38/release80

If a star genome is created, it will be saved in the same folder:
/mnt/cgs-fs3/Sequencing/Genome/Human/dna/ensembl/grch38/release80/star/

Other types of references:
gtf : /mnt/cgs-fs3/Sequencing/Genome/Human/gtf/ensembl/grch38/release-82/Homo_sapiens.GRCh38.82.gtf
ncrna: /mnt/cgs-fs3/Sequencing/Genome/Human/ncRNA/ensembl/grch38/release-82/Homo_sapiens.GRCh38.ncrna.fa
cdna: /mnt/cgs-fs3/Sequencing/Genome/Human/cdna/ensembl/grch38/release-80/Homo_sapiens.GRCh38.cdna.all.fa

#=====================================================================================================#

//------------------------------------------//
  Other reference files used in the analysis:
//------------------------------------------//

/mnt/cgs-fs3/Sequencing/Genome/Human/gtf/ensembl/grch38/release-83/bedfile/Homo_sapiens.GRCh38.83.gtf.bed
/mnt/cgs-fs3/Sequencing/Genome/Human/gtf/ensembl/grch38/release-83/bedfile/Homo_sapiens.GRCh38.83_10K.gtf.bed
/mnt/cgs-fs3/Sequencing/Genome/Human/gtf/ensembl/grch38/release-83/bedfile/rRNAIntervalList/hg38.83.rRNA.interval_list
/mnt/cgs-fs3/Sequencing/Genome/Human/gtf/ensembl/grch38/release-83/refFlat/Homo_sapiens.GRCh38.83.refFlat.txt


BEDFILE
--------
# Bed file created from gtf using gtfToGenePred. Download from: hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/gtfToGenePred:
  $ gtfToGenePred -genePredExt -geneNameAsName2 Homo_sapiens.GRCh38.83.gtf gene.tmp
  $ awk '{print $2,$4,$5,$1,0,$3,$4,$4,0,$8,$9,$10}' gene.tmp > Homo_sapiens.GRCh38.83.gtf.bed
Then in R
  > x=read.table('Homo_sapiens.GRCh38.83.gtf.bed')
  > start=x$V2
  > exon_start=as.character(x$V11)
  > exon_start=strsplit(exon_start, split=',')
  > exon_end=as.character(x$V12)
  > exon_end=strsplit(exon_end, split=',')
  > exon_size=sapply(1:length(exon_start),function(x){paste(as.numeric(exon_end[[x]])-as.numeric(exon_start[[x]]), collapse=',')})
  > exon_start_new=sapply(1:length(exon_start),function(x){paste(as.numeric(exon_start[[x]])-as.numeric(start[x]), collapse=',')})
  > x$V11=exon_size
  > x$V12=exon_start_new
  > x$V11=paste0(x$V11,',')
  > x$V12=paste0(x$V12,',')
  > write.table(x,'Homo_sapiens.GRCh38.83.gtf.bed',sep='\t', quote=F, row.names=FALSE, col.names=FALSE)

 

BEDFILE 10K
-----------
# Using the bedfile created with gtfToGenePred in the step before
  $ shuf -n 10000 Homo_sapiens.GRCh38.83.gtf.bed > Homo_sapiens.GRCh38.83_10K.gtf.bed

REFLAT 
------
We used gtfToGenePred utility from UCSC. Download from: hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/gtfToGenePred
commands: 
  $ gtfToGenePred -genePredExt gtfFile refFlat.tmp.txt
  $ paste <(cut -f 12 refFlat.tmp.txt) <(cut -f 1-10 refFlat.tmp.txt) > refFlat.txt

It should be stored in the gtf/version/release/refFlat folder
Keep version and release in the name of the refFlat

rRNA Interval list
------------------
We use bedops to convert from gtf to bedfile
  $ gtf2bed < gtf > Homo_sapiens.GRCh38.83_bedops_format.bed

We obtained the rRNA from that bedfile
  $ awk '{if($8=="gene"){print $0}}' Homo_sapiens.GRCh38.83_bedops_format.bed | awk '{if($19=="\"rRNA\";"){print $0}}' > rRNAIntervalList/Homo_sapiens.GRCh38.83_bedops_format_rRNA.bed

We downloaded a script to create interval list from https://gist.github.com/adomingues/57e3c2f9f4aca8dfde7 and run:
  $ createRNAInterval_list.sh hg Homo_sapiens.GRCh38.83_bedops_format_rRNA.bed

Create an interval header and cat it: 
  $ samtools view -H bamfile |  grep '@' > interval_header
  $ cat interval_header hg.rRNA.interval_list > hg38.83.rRNA.interval_list2 && mv hg38.83.rRNA.interval_list2 hg38.83.rRNA.interval_list

Note: bam file used should have been created with same gtf than current ex: hg38.83

